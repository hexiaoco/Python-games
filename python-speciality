

1. 函数式编程

函数式编程就是一种抽象程度很高的编程范式，纯粹的函数式编程语言编写的函数没有变量，因此，任意一个函数，只要输入是确定的，输出就是确定的，这种纯函数我们称之为没有副作用。而允许使用变量的程序设计语言，由于函数内部的变量状态不确定，同样的输入，可能得到不同的输出，因此，这种函数是有副作用的。

函数式编程的一个特点就是，允许把函数本身作为参数传入另一个函数，还允许返回一个函数！

Python对函数式编程提供部分支持。由于Python允许使用变量，因此，Python不是纯函数式编程语言。


2. 动态类型
(对于小的整数和短字符串，Python会缓存这些对象，而不是频繁的建立和销毁。)
这个现象之前我有发现，我发现 a,b两个变量，如果都等于一个简单的数字，那么表达式(a is b)，总是返回True，原因就是python对于简单的对象（包括简单的数字和字符串）做了缓存，
而如果a=[];b=[]; 或者a={};b={}; 那么表达式(a is b)始终返回False。


3. 可变数据对象(mutable object)  和  不可变数据对象(immutable object)
动态类型是Python的核心机制之一


总结：
1》引用和对象的分离，对象是内存中储存数据的实体，引用指向对象。
2》可变对象，不可变对象
3》函数值传递
http://www.cnblogs.com/vamei/archive/2012/07/10/2582795.html


